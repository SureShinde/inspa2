<?php
/**
 * Landofcoder
 * 
 * NOTICE OF LICENSE
 * 
 * This source file is subject to the Landofcoder.com license that is
 * available through the world-wide-web at this URL:
 * http://landofcoder.com/license
 * 
 * DISCLAIMER
 * 
 * Do not edit or add to this file if you wish to upgrade this extension to newer
 * version in the future.
 * 
 * @category   Landofcoder
 * @package    Lof_Formbuilder
 * @copyright  Copyright (c) 2016 Landofcoder (http://www.landofcoder.com/)
 * @license    http://www.landofcoder.com/LICENSE-1.0.html
 */

namespace Lof\Formbuilder\Block\Adminhtml\Form\Edit\Button;

use Magento\Ui\Component\Control\Container;

class Save extends \Magento\Backend\Block\Widget\Container
{
    public function __construct(
        \Magento\Backend\Block\Widget\Context $context,
        \Magento\Framework\Registry $registry,
        array $data = []
    ) {
        parent::__construct($context);
        $this->_coreRegistry = $registry;
    }

    /**
     * Prepare button and grid
     *
     * @return \Lof\FollowUpEmail\Block\Adminhtml\Email
     */
    protected function _prepareLayout()
    {
        $this->buttonList->remove('save');
        if ($this->_isAllowedAction('Lof_Formbuilder::form_save')) {
            $addButtonProps = [
                'id'           => 'save',
                'label'        => __('Save Form'),
                'class'        => 'add',
                'button_class' => '',
                'class_name'   => 'Magento\Backend\Block\Widget\Button\SplitButton',
                'options'      => $this->getOptions(),
                'data_attribute' => [
                    'mage-init' => [
                        'button' => [
                            'event' => 'saveAndContinueEdit',
                            'target' => '#edit_form'
                        ]
                    ]
                ]
            ];
            $this->buttonList->add('add_new', $addButtonProps);
        }

        return parent::_prepareLayout();
    }

    /**
     * Retrieve options
     *
     * @return array
     */
    protected function getOptions()
    {
        $options = [];
        $options[] = [
            'id' => 'new-button',
            'label' => __('Save & New'),
            'data_attribute' => [
                'mage-init' => [
                    'button' => [
                        'event' => 'saveAndNew',
                        'target' => '#edit_form'
                    ]
                ]
            ]
        ];

        if ($this->_coreRegistry->registry('formbuilder_form')->getId()) {
            $options[] = [
                'id' => 'duplicate-button',
                'label' => __('Save & Duplicate'),
                'data_attribute' => [
                    'mage-init' => [
                        'button' => [
                            'event' => 'saveAndDuplicate',
                            'target' => '#edit_form'
                        ]
                    ]
                ]
            ];
        }
        $options[] = [
            'id' => 'close-button',
            'label' => __('Save & Close'),
            'data_attribute' => [
                'mage-init' => [
                    'button' => [
                        'event' => 'save',
                        'target' => '#edit_form'
                    ]
                ]
            ]
        ];
        return $options;
    }

    /**
     * Check permission for passed action
     *
     * @param string $resourceId
     * @return bool
     */
    protected function _isAllowedAction($resourceId)
    {
        return $this->_authorization->isAllowed($resourceId);
    }
//    public function _afterToHtml($html)
//    {
//        $script = $this->getScript();
//        return parent::_afterToHtml($html).$script; // TODO: Change the autogenerated stub
//    }
//    public function getScript(){
//        return'
//        <script>
//            document.getElementById("save").addEventListener("click", function(e) {
//               var x = document.getElementsByClassName("fb-no-response-fields");
//               var check = (x[0]["style"]["display"]);
//               if(check != "none"){
//                   alert(__("wrong"));
//
//               }
//            });
//        </script>';
//    }

}
